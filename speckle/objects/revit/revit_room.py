# generated by datamodel-codegen:
#   filename:  RevitRoom.json
#   timestamp: 2020-11-24T16:33:28+00:00

from __future__ import annotations

from typing import Any, Dict, List, Optional

from pydantic import BaseModel


class ICurve(BaseModel):
    __root__: Optional[Dict[str, Any]]


class IGeometry(BaseModel):
    __root__: Optional[Dict[str, Any]]


class Mesh(BaseModel):
    vertices: Optional[List[float]] = None
    faces: Optional[List[int]] = None
    colors: Optional[List[int]] = None
    textureCoordinates: Optional[List[float]] = None
    id: Optional[Optional[str]] = None
    totalChildrenCount: Optional[int] = None
    applicationId: Optional[Optional[str]] = None
    speckle_type: Optional[Optional[str]] = None


class Point(BaseModel):
    value: Optional[List[float]] = None
    id: Optional[Optional[str]] = None
    totalChildrenCount: Optional[int] = None
    applicationId: Optional[Optional[str]] = None
    speckle_type: Optional[Optional[str]] = None


class Level(BaseModel):
    name: Optional[Optional[str]] = None
    elevation: Optional[float] = None
    baseGeometry: Optional[IGeometry] = None
    displayMesh: Optional[Mesh] = None
    type: Optional[Optional[str]] = None
    level: Optional[Level] = None
    id: Optional[Optional[str]] = None
    totalChildrenCount: Optional[int] = None
    applicationId: Optional[Optional[str]] = None
    speckle_type: Optional[Optional[str]] = None


class RevitRoom(BaseModel):
    basePoint: Optional[Point] = None
    number: Optional[Optional[str]] = None
    area: Optional[float] = None
    volume: Optional[float] = None
    holes: Optional[List[ICurve]] = None
    baseGeometry: Optional[IGeometry] = None
    displayMesh: Optional[Mesh] = None
    type: Optional[Optional[str]] = None
    level: Optional[Level] = None
    id: Optional[Optional[str]] = None
    totalChildrenCount: Optional[int] = None
    applicationId: Optional[Optional[str]] = None
    speckle_type: Optional[Optional[str]] = None


Level.update_forward_refs()
