# generated by datamodel-codegen:
#   filename:  Curve.json
#   timestamp: 2020-11-18T11:56:12+00:00

from __future__ import annotations

from typing import List, Optional

from pydantic import BaseModel


class Interval(BaseModel):
    start: Optional[Optional[float]] = None
    end: Optional[Optional[float]] = None
    id: Optional[Optional[str]] = None
    totalChildrenCount: Optional[int] = None
    applicationId: Optional[Optional[str]] = None
    speckle_type: Optional[Optional[str]] = None


class Polyline(BaseModel):
    value: Optional[List[float]] = None
    closed: Optional[bool] = None
    domain: Optional[Interval] = None
    id: Optional[Optional[str]] = None
    totalChildrenCount: Optional[int] = None
    applicationId: Optional[Optional[str]] = None
    speckle_type: Optional[Optional[str]] = None


class Curve(BaseModel):
    degree: Optional[int] = None
    periodic: Optional[bool] = None
    rational: Optional[bool] = None
    points: Optional[List[float]] = None
    weights: Optional[List[float]] = None
    knots: Optional[List[float]] = None
    domain: Optional[Interval] = None
    displayValue: Optional[Polyline] = None
    closed: Optional[bool] = None
    id: Optional[Optional[str]] = None
    totalChildrenCount: Optional[int] = None
    applicationId: Optional[Optional[str]] = None
    speckle_type: Optional[Optional[str]] = None
